// All Static Url We Used in Project
// var urlserverlink = "http://localhost:8003/api/";
// var urlserverlinkhtml = "http://localhost:8003";
var urlhome = "";
var urlsignup = "signup";
var urlsignupsuccess = "signup-success";
var urllogin = "login";
var urlforgotpwd = "forgot-password";
var urlverifypwd = "verify-password";
var urlnewpwd = "reset-password";
var urlprivacy = "privacy";
var urlterms = "terms";
var urlverification = "verification";

// Get Local Storage Data
var user = window.localStorage.getItem('user');
var expireuser = window.localStorage.getItem('expireuser');
var getlang = window.localStorage.getItem('lang');
var lang = "EN";
if (!getlang) {
  lang = "EN";

  // Place Holders
 $('#email').attr('placeholder','Enter Email');
 $('#pwd').attr('placeholder','Enter Password');
 $('#cpwd').attr('placeholder','Enter Confirm Password');
 $('#name').attr('placeholder','Enter Name');
 $('#password').attr('placeholder','Enter Password');
 $('#emailtoken').attr('placeholder','Enter Verification Code');

 // Errors
 var pwderr = "Password not match with database!";
 var confirmpwdmsg = "Confirm password not matching with password!";
 var Somethingwrong = "Something went wrong, Please try again!";
 var notvaliddomain = "Not a valid domain!";

 // Verification Page
 var suc = "Success!";
   var err = "Error!";
   var userNotExists2 = "User Not Found in Our system, Please try again!";
   var serverMessage3 = "Something went wrong, Please try again!";
   var badRequest4 = "Bad request, Please try again!";
   var userVerifySuccessfully1 = "Your account is activated. Please log in now.";

   // Copy paste text
   var ctext1 = "Code has been copied.";
   var ctext2 = "Copy API integration code";

   // Jquery Validation Messages
   var emailValRequired = "Email field is required."
   var emailValRequired1 = "Please enter valid email address.";
   var pwdValRequired = "Password field is required.";
   var pwdValRequired1 = "Password should be at least 8 characters";
   var cpwdValRequired = "Confirm password field is Required.";
   var cpwdValRequired1 = "Confirm password should be at least 8 characters";
   var cpwdValRequired2 = "Password does not match";
   var emailtokenRequired = "Verification code field is required.";
   var emailtokenRequired1 = "Verification code should be at least 6 digit";
}
else
{
  lang = getlang;
  if (lang=="EN")
  {
    // Place Holders
     $('#email').attr('placeholder','Enter Email');
     $('#pwd').attr('placeholder','Enter Password');
     $('#cpwd').attr('placeholder','Enter Confirm Password');
     $('#name').attr('placeholder','Enter Name');
     $('#password').attr('placeholder','Enter Password');
     $('#emailtoken').attr('placeholder','Enter Verification Code');

     // Errors
     var pwderr = "Password not match with database!";
     var confirmpwdmsg = "Confirm password not matching with password!";
     var Somethingwrong = "Something went wrong, Please try again!";
     var notvaliddomain = "Not a valid domain!";


     // Verification Page
     var suc = "Success!";
       var err = "Error!";
       var userNotExists2 = "User not fount in our database, Please try again!";
       var serverMessage3 = "Something went wrong, Please try again!";
       var badRequest4 = "Bad request, Please try again!";
       var userVerifySuccessfully1 = "Your account is activated. Please log in now.";

       // Copy paste text
       var ctext1 = "Code has been copied.";
       var ctext2 = "Copy API integration code";

       // Jquery Validation Messages
       var emailValRequired = "Email field is required."
       var emailValRequired1 = "Please enter valid email address.";
       var pwdValRequired = "Password field is required.";
       var pwdValRequired1 = "Password should be at least 8 characters";
       var cpwdValRequired = "Confirm password field is Required.";
       var cpwdValRequired1 = "Confirm password should be at least 8 characters";
       var cpwdValRequired2 = "Password does not match";
       var emailtokenRequired = "Verification code field is required.";
       var emailtokenRequired1 = "Verification code should be at least 6 digit";
  }
  else
  {
    // Place Holders
    $('#email').attr('placeholder','이메일 입력');
    $('#pwd').attr('placeholder','암호를 입력');
    $('#cpwd').attr('placeholder','비밀번호 확인 입력');
    $('#name').attr('placeholder','이름을 입력하시오');
    $('#password').attr('placeholder','암호를 입력');
    $('#emailtoken').attr('placeholder','인증 코드 입력');

    // Errors
    var pwderr = "암호가 데이터베이스와 일치하지 않습니다!";
    var confirmpwdmsg = "암호와 일치하지 않는 암호를 확인하십시오!";
    var Somethingwrong = "문제가 발생했습니다. 다시 시도하십시오!";
    var notvaliddomain = "유효한 도메인이 아닙니다!";

    // Verification Page
    var suc = "성공!";
      var err = "오류!";
      var userNotExists2 = "사용자가 데이터베이스에 관심이 없습니다. 다시 시도하십시오!";
      var serverMessage3 = "문제가 발생했습니다. 다시 시도하십시오!";
      var badRequest4 = "잘못된 요청입니다. 다시 시도하십시오!";
      var userVerifySuccessfully1 = "당신의 계정이 활성화 되었습니다. 지금 로그인 하세요.";

      // Copy paste text
      var ctext1 = "코드가 복사되었습니다.";
      var ctext2 = "API 연동 코드 복사";

      // Jquery Validation Messages
      var emailValRequired = "이메일 필드는 필수입니다.";
      var emailValRequired1 = "유효한 이메일 주소를 입력하십시오.";
      var pwdValRequired = "비밀번호 필드는 필수입니다.";
      var pwdValRequired1 = "비밀번호는 8 자 이상이어야합니다.";
      var cpwdValRequired = "비밀번호 확인 필드는 필수입니다.";
      var cpwdValRequired1 = "비밀번호 확인은 8 자 이상이어야합니다.";
      var cpwdValRequired2 = "비밀번호가 일치하지 않습니다";
      var emailtokenRequired = "확인 코드 필드는 필수입니다.";
      var emailtokenRequired1 = "인증 코드는 6 자리 이상이어야합니다.";
  }
}

/* For Chek User Login or Not and Base on Change Sing Up, Log In, Logout Button */
function checkLogin(pageurl = "") {
  // Check Local Storage is Empty
    if (!user) {
      // Show Logout Link
      var signuplink = '<li class="list-inline-item" id="hide-signup">'
                        +'<a href="/signup" class="btn btn-theme" id="signupbutton">'
                        +'Sign up'
                        +'</a>'
                        +'</li>';
    var loginlink = '<li class="list-inline-item" id="hide-login">'
                        +'<a href="/login" class="btn btn-theme" id="loginbutton">'
                        +'Log in'
                        +'</a>'
                        +'</li>';

    if (pageurl == urlsignup) {
      $("#append-logout").append(loginlink);
    }
    else if (pageurl == urlsignupsuccess) {
        $("#append-logout").append(loginlink);
    }
    else if (pageurl == urllogin) {
        $("#append-logout").append(signuplink);
    }
    else if (pageurl == urlforgotpwd) {
        $("#append-logout").append(signuplink);
    }
    else if (pageurl == urlverifypwd) {
        $("#append-logout").append(signuplink);
    }
    else {
      $("#append-logout").append(signuplink);
        $("#append-logout").append(loginlink);
    }


        //console.log("checkLogin - User Not Login So, Do Nothing");
        return;
    }
    else {

        // Check Local Storage User Login Time is Empty
        if (!expireuser) {
          //console.log("checkLogin - UserExpireTime Not Login So, Do Nothing");
          return;
        }
        else {

          var configurl = urlserverlinkhtml + pageurl;
          //console.log("Configurl : " + configurl);
          //console.log("pageurl : " + pageurl);

          // Geting Localstorage User Data
          user = JSON.parse(user);
          //console.log("Email : " + user.email);
          //console.log("expireuser : " + expireuser);

          // Check Expire Time
          var today = new Date();
          var creted = new Date(expireuser);
          var expire = new Date(expireuser);
          expire = new Date(expire.setHours(expire.getHours() + 2));
          //console.log("Current : " + today);
          //console.log("Created : " + creted);
          //console.log("Expired : " + expire);

          if (today > expire) {
              // Clear user Sesiion Data from MongoDB and Local Storage Data and redirect to Login
              //console.log("Today Time is Higher Then Expire Time.");
              window.localStorage.clear();
          }
          else
          {
              // Do Nothing
              //console.log("Expire Time is Higher then Today Time.");
              //return;
          }

          // Hide Signup Button
          $("#hide-signup").css("display","none");
          $("#hide-signup").hide();
          // Hide Login Button
          $("#hide-login").css("display","none");
          $("#hide-login").hide();
          // Show Logout Link
          var logoutlink = '<li class="list-inline-item" id="hide-logout">'
                            +'<a href="javascript:void(0)" class="btn btn-theme" onclick = "return logout()" id="logoutbutton">'
                            +'Logout'
                            +'</a>'
                            +'</li>';
          $("#append-logout").append(logoutlink);

          // Check if User Login AND Open this Url then Redirect to Home
          if (configurl == urlserverlinkhtml+urllogin) {
            window.location.href = urlserverlinkhtml+urlhome;
          }
          else if (configurl == urlserverlinkhtml+urlsignup) {
            window.location.href = urlserverlinkhtml+urlhome;
          }
          else if (configurl == urlserverlinkhtml+urlsignupsuccess) {
            window.location.href = urlserverlinkhtml+urlhome;
          }
          else if (configurl == urlserverlinkhtml+urlforgotpwd) {
            window.location.href = urlserverlinkhtml+urlhome;
          }
          else if (configurl == urlserverlinkhtml+urlverifypwd) {
            window.location.href = urlserverlinkhtml+urlhome;
          }
          else if (configurl == urlserverlinkhtml+urlnewpwd) {
            window.location.href = urlserverlinkhtml+urlhome;
          }
        }
    }
}

/* Sign Up */
function signup() {

  jQuery.validator.addMethod("validate_email", function(value, element) {

      if (/^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/.test(value)) {
          return true;
      } else {
          return false;
      }
  }, emailValRequired1);

  $("#signupform").validate({
    rules: {
      email: {
        validate_email: true,
        required: true,
        email: true
      },
      password: {
        required: true,
        minlength: 8
      },
      cpwd : {
          required: true,
          minlength : 8,
          equalTo : "#pwd"
      }
    },
    messages: {
      email: {
        required: emailValRequired,
        validate_email : emailValRequired1
      },
      password: {
        required: pwdValRequired,
        minlength: pwdValRequired1
      },
      cpwd: {
        required: cpwdValRequired,
        minlength: cpwdValRequired1,
        equalTo : cpwdValRequired2
      }
    },
    submitHandler: function(form) {
      var myString   = $("#pwd").val();
      var myPassword = "this@is_usedfor#encrypted&string)-8*-(this@is_usedfor#encrypted&string)-*1*-(this@is_usedfor#encrypted&string)(";

      // PROCESS
      var encrypted = CryptoJS.AES.encrypt(myString, myPassword);
      var decrypted = CryptoJS.AES.decrypt(encrypted, myPassword);
      // alert(myString);
      // alert(encrypted);
      // alert(decrypted);
      // alert(decrypted.toString(CryptoJS.enc.Utf8));

      var desdata = $("#email").val(); //"123@String.com";
      var whatIWant = desdata.substring(desdata.indexOf('@') + 1);;
      //console.log(whatIWant);
      //alert(whatIWant)

      var email = $("#email").val();
      var password = $("#pwd").val();
      var name = $("#name").val();
      var gRecaptchaResponse = $("#g-recaptcha-response").val();
      $.ajax({
        url: urlserverlink+'signup',
        data: {email:email,password:encrypted.toString(),name:name,gRecaptchaResponse: gRecaptchaResponse,lang:lang,whatIWant:whatIWant},
        type: 'POST',
        dataType:'json',
        beforeSend: function() {
          $("#myDiv").show();
        },
        success: function(response)
        {
            $("#myDiv").hide();
            if (response.issuccess == "success" || response.issuccess == "오류") {
              window.location.href = urlserverlinkhtml+urlsignupsuccess;
              // $("#success-message").html(response.message);
              // $('.alert-success').fadeIn(1000);
              // setTimeout(function() {
                //   $('.alert-success').fadeOut(1000);
              // }, 5000);
            }
            else
            {
              grecaptcha.reset();
              var valerror = "";
              if (Array.isArray(response.message)) {
                  for (var i = 0; i < response.message.length; i++) {
                    valerror = valerror + response.message[i].msg + "\n";
                  }
              }
              else
              {
                  valerror = response.message;
              }
              $("#error-message").html(valerror);
              $('.alert-danger').fadeIn(1000);
              setTimeout(function () { $('.alert-danger').hide(); }, 5000);
            }
        },
        error: function(jqXHR, textStatus, errorThrown)
        {
            grecaptcha.reset();
            $("#myDiv").hide();
            $("#error-message").html(Somethingwrong);
            $('.alert-danger').fadeIn(1000);
            setTimeout(function () { $('.alert-danger').hide(); }, 5000);
        }
      });
    }
  });
}

/* Log In */
function login() {

  jQuery.validator.addMethod("validate_email", function(value, element) {

      if (/^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/.test(value)) {
          return true;
      } else {
          return false;
      }
  }, emailValRequired1);

  $("#login-form").validate({
    rules: {
      email: {
        validate_email: true,
        required: true,
        email: true
      },
      password: {
        required: true,
        minlength: 8
      }
    },
    messages: {
      email: {
        required: emailValRequired,
        validate_email : emailValRequired1
      },
      password: {
        required: pwdValRequired,
        minlength: pwdValRequired1
      }
    },
    submitHandler: function(form) {
      var email = $("#email").val();
      var password = $("#pwd").val();
      var myString   = $("#pwd").val();
      var myPassword = "this@is_usedfor#encrypted&string)-8*-(this@is_usedfor#encrypted&string)-*1*-(this@is_usedfor#encrypted&string)(";

      // PROCESS
      var encrypted = CryptoJS.AES.encrypt(myString, myPassword);
      var decrypted = CryptoJS.AES.decrypt(encrypted, myPassword);
      // alert(myString);
      // alert(encrypted);
      // alert(decrypted);
      // alert(decrypted.toString(CryptoJS.enc.Utf8));
      $.ajax({
        url: urlserverlink+'login',
        data: {email:email,password:encrypted.toString(),lang:lang},
        type: 'POST',
        dataType:'json',
        beforeSend: function() {
            $("#myDiv").show();
        },
        success: function(response)
        {
            $("#myDiv").hide();
            if (response.issuccess == "success" || response.issuccess == "오류") {

              var chpkpwd = response.data.password;
              decrypted = CryptoJS.AES.decrypt(chpkpwd, myPassword);
              decrypted = decrypted.toString(CryptoJS.enc.Utf8);
              //console.log(decrypted);
              //alert(decrypted);
              if(password != decrypted)
              {
                $("#error-message").html(pwderr);
                $('.alert-danger').fadeIn(1000);
                setTimeout(function () { $('.alert-danger').hide(); }, 5000);
                return false;
              }
              // Set 2 Hour Log
              var today = new Date();
              today = today.setHours(today.getHours() + 2);

              // Set Local Storage Data
              window.localStorage.setItem('user', JSON.stringify(response.data));
              window.localStorage.setItem('expireuser', new Date());

              // Redirect to Home Page
              window.location.href = urlserverlinkhtml+urlhome;

              checklang();

              /*$("#success-message").html(response.message);
              $('.alert-success').fadeIn(1000);
              setTimeout(function() {
                  $('.alert-success').fadeOut(1000);
              }, 5000);*/
            }
            else
            {
              var valerror = "";
              if (Array.isArray(response.message)) {
                  for (var i = 0; i < response.message.length; i++) {
                    valerror = valerror + response.message[i].msg + "\n";
                  }
              }
              else
              {
                  valerror = response.message;
              }
              $("#error-message").html(valerror);
              $('.alert-danger').fadeIn(1000);
              setTimeout(function () { $('.alert-danger').hide(); }, 5000);

              checklang();
            }
        },
        error: function(jqXHR, textStatus, errorThrown)
        {
            $("#myDiv").hide();
            $("#error-message").html(Somethingwrong);
            $('.alert-danger').fadeIn(1000);
            setTimeout(function () { $('.alert-danger').hide(); }, 5000);

          checklang();
        }
      });
    }
  });
}

/* Log Out */
function logout() {
  // Check Local Storage is Empty
  if (!user) {
      //console.log("logout - User Not Login So, Do Nothing");
      return;
  }
  else {
      window.localStorage.clear();

      checklang();
      var configurl = urlserverlinkhtml+urllogin;
      window.location.href = configurl;
  }
}

/* Forgot Password */
function forgotpassword() {
  jQuery.validator.addMethod("validate_email", function(value, element) {

      if (/^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/.test(value)) {
          return true;
      } else {
          return false;
      }
  }, emailValRequired1);

  $("#forgot-pwd-form").validate({
    rules: {
      email: {
        validate_email: true,
        required: true,
        email: true
      }
    },
    messages: {
      email: {
        required: emailValRequired,
        validate_email : emailValRequired1
      }
    },
    submitHandler: function(form) {
      var email = $("#email").val();
      $.ajax({
        url: urlserverlink+'forgot-password',
        data: {email:email,lang:lang},
        type: 'POST',
        dataType:'json',
        beforeSend: function() {
            $("#myDiv").show();
        },
        success: function(response) {
            $("#myDiv").hide();
            if (response.issuccess == "success" || response.issuccess == "오류") {
              // Redirect to Home Page
              window.location.href = urlserverlinkhtml+urlverifypwd;

              /*$("#success-message").html(response.message);
              $('.alert-success').fadeIn(1000);
              setTimeout(function() {
                  $('.alert-success').fadeOut(1000);
              }, 5000);*/
            }
            else
            {
              var valerror = "";
              if (Array.isArray(response.message)) {
                  for (var i = 0; i < response.message.length; i++) {
                    valerror = valerror + response.message[i].msg + "\n";
                  }
              }
            else
              {
                  valerror = response.message;
              }
              $("#error-message").html(valerror);
            $('.alert-danger').fadeIn(1000);
              setTimeout(function () { $('.alert-danger').hide(); }, 5000);
            }
        },
        error: function(jqXHR, textStatus, errorThrown)
        {
            $("#myDiv").hide();
            $("#error-message").html(Somethingwrong);
            $('.alert-danger').fadeIn(1000);
            setTimeout(function () { $('.alert-danger').hide(); }, 5000);
        }
      });
    }
  });
}

/* Verify Password  */
function verifypassword() {
  $("#verification-code").validate({
    rules: {
      emailtoken: {
        required: true,
        minlength: 6,
        maxlength: 6
      }
    },
    messages: {
      emailtoken: {
        required: emailtokenRequired,
        minlength: emailtokenRequired1,
        maxlength: emailtokenRequired1
      }
    },
    submitHandler: function(form) {
      var emailtoken = $("#emailtoken").val();
      $.ajax({
        url: urlserverlink+'verify-forgot-password',
        data: {emailtoken:emailtoken,lang:lang},
        type: 'POST',
        dataType:'json',
        beforeSend: function() {
            $("#myDiv").show();
        },
        success: function(response)
        {
            $("#myDiv").hide();
            if (response.issuccess == "success" || response.issuccess == "오류") {
              // Redirect to Home Page
              window.location.href = urlserverlinkhtml+urlnewpwd + "?sid=" + response.data.emailtoken;
              /*$("#success-message").html(response.message);
              $('.alert-success').fadeIn(1000);
              setTimeout(function() {
                  $('.alert-success').fadeOut(1000);
              }, 5000);*/
            }
            else
            {
              var valerror = "";
              if (Array.isArray(response.message)) {
                  for (var i = 0; i < response.message.length; i++) {
                    valerror = valerror + response.message[i].msg + "\n";
                  }
              }
              else
              {
                  valerror = response.message;
              }
              $("#error-message").html(valerror);
              $('.alert-danger').fadeIn(1000);
              setTimeout(function () { $('.alert-danger').hide(); }, 5000);
            }
        },
        error: function(jqXHR, textStatus, errorThrown)
        {
            $("#myDiv").hide();
            $("#error-message").html(Somethingwrong);
            $('.alert-danger').fadeIn(1000);
            setTimeout(function () { $('.alert-danger').hide(); }, 5000);
        }
      });
    }
  });
}

/* Reset Password */
function resetpassword() {
  $("#new-pwd").validate({
    rules: {
      password: {
        required: true,
        minlength: 8
      },
      cpwd : {
          required: true,
          minlength : 8,
          equalTo : "#password"
      }
    },
    messages: {
      password: {
        required: pwdValRequired,
        minlength: pwdValRequired1
      },
      cpwd: {
        required: cpwdValRequired,
        minlength: cpwdValRequired1,
        equalTo : cpwdValRequired2
      }
    },
    submitHandler: function(form) {
      var emailtoken = $("#emailtoken").val();
        var password = $("#password").val();

        var myString   = $("#password").val();
        var myPassword = "this@is_usedfor#encrypted&string)-8*-(this@is_usedfor#encrypted&string)-*1*-(this@is_usedfor#encrypted&string)(";

        // PROCESS
        var encrypted = CryptoJS.AES.encrypt(myString, myPassword);
        var decrypted = CryptoJS.AES.decrypt(encrypted, myPassword);
        // alert(myString);
        // alert(encrypted);
        // alert(decrypted);
        // alert(decrypted.toString(CryptoJS.enc.Utf8));

        $.ajax({
          url: urlserverlink+'set-new-password',
          data: {password:encrypted.toString(),emailtoken:emailtoken,lang:lang},
          type: 'POST',
          dataType:'json',
          beforeSend: function() {
            $("#myDiv").show();
          },
          success: function(response)
          {
              $("#myDiv").hide();
              if (response.issuccess == "success" || response.issuccess == "오류") {
                // Redirect to Home Page
                //console.log(response);
                window.location.href = urlserverlinkhtml+urllogin;
                /*$("#success-message").html(response.message);
                $('.alert-success').fadeIn(1000);
                setTimeout(function() {
                    $('.alert-success').fadeOut(1000);
                }, 5000);*/
              }
              else
              {
                var valerror = "";
                if (Array.isArray(response.message)) {
                    for (var i = 0; i < response.message.length; i++) {
                      valerror = valerror + response.message[i].msg + "\n";
                    }
                }
                else
                {
                    valerror = response.message;
                }
                $("#error-message").html(valerror);
                $('.alert-danger').fadeIn(1000);
                setTimeout(function () { $('.alert-danger').hide(); }, 5000);
              }
          },
          error: function(jqXHR, textStatus, errorThrown)
          {
              $("#myDiv").hide();
              $("#error-message").html(Somethingwrong);
              $('.alert-danger').fadeIn(1000);
              setTimeout(function () { $('.alert-danger').hide(); }, 5000);
          }
        });
    }
  });
}

function succerrmsg() {
  let searchParams = new URLSearchParams(window.location.search);
    let issuccess = searchParams.has('issuccess');
    let parammessage = 3; // Server status

    if (issuccess==true) {
      paramissuccess = searchParams.get('issuccess');

      if (paramissuccess=="success")
      {
        //console.log("1 : " + userVerifySuccessfully1);
        //alert("1 : " + userVerifySuccessfully1);
        $("#server-status").html(suc);
        $("#server-text").html(userVerifySuccessfully1);
      }
      else
      {
        let message = searchParams.has('message');
        if (message == true) {
          parammessage = searchParams.get('message'); 
          if (parammessage == 2) {
            //console.log("2 : " + userNotExists2);
            //alert("2 : " + userNotExists2);
            $("#server-status").html(err);
            $("#server-text").html(userNotExists2);
          }
          else if (parammessage == 3) {
            //console.log("3 : " + serverMessage3);
            //alert("3 : " + serverMessage3);
            $("#server-status").html(err);
            $("#server-text").html(serverMessage3);
          }
          else {
            //console.log("4 : " + badRequest4);
            //alert("4 : " + badRequest4);
            $("#server-status").html(err);
            $("#server-text").html(badRequest4);
          }
        }
      }

    }
}

function copyText() {
  console.log('--')
  /* Creating textarea only once, but not each time */
    let area = document.createElement('textarea');
    document.body.appendChild( area );
    area.style.display = "none";

    let content = document.querySelectorAll('.js-content');
    let copy    = document.querySelectorAll('.js-copy');

    for( let i = 0; i < copy.length; i++ ){
      copy[i].addEventListener('click', function(){
        area.style.display = "block";
          /* because the classes are paired, we can use the [i] index from the clicked button, to get the required text block */
          area.value = content[i].innerText;
          area.select();
          document.execCommand('copy');
          area.style.display = "none";
          /* decorative part */
          //this.innerHTML = 'Text Cop<span style="color: red;">ied</span>';
          this.innerHTML =  '<span>'+ctext1+'</span>';

          /* arrow function doesn't modify 'this', here it's still the clicked button */
          if (content[i].innerText == "imdb7.plus") {
            console.log('log')
            setTimeout( () => this.innerHTML = "Movie (New)", 2000 );
          } else {
            setTimeout( () => this.innerHTML = "Copy API endpoint", 2000 );
          }
          // setTimeout( () => this.innerHTML = ctext2, 2000 );
      });
    }
}

function checklang() {
  var ip = "";
  var obj;
  $.ajax({
      url: urlserverlink+'checklang',
      data: {ip:ip, lang:lang},
      type: 'POST',
      dataType:'json',
      success: function(response) {
          //$("#myDiv").hide();
          if (response.issuccess == "success" || response.issuccess == "오류") {
              window.localStorage.setItem('lang', response.lang);
              obj = response.lang;
              changeLanguage( obj );
              $("#showip").html(response.ip);
              $("#showlang").html(response.lang);
          } else {
              //cannot detect lang, show default English
              window.localStorage.setItem('lang', "EN");
              obj = "EN";
              changeLanguage( obj );
              $("#showip").html("");
              $("#showlang").html(obj);
          }

      },
      error: function(jqXHR, textStatus, errorThrown)
      {
          //default English
        window.localStorage.setItem('lang', "EN");
        obj = "EN";
        changeLanguage( obj );
        $("#showip").html("");
        $("#showlang").html(obj);
      }
    });
}
function changeLanguage( obj ) {
  $.getJSON( "js/translation.json" , function( result ){
      var result = JSON.stringify(result);
      var langparse = JSON.parse(result);
      var lang = obj; //ko\
      var check = langparse.en;
      if (lang) {
        lang = lang.toLowerCase();
        check = langparse[lang];
      }

      //playstore download img and link
      $("#playstore-icon").attr("src", check.playstoreImg);


      /* Login , Sign up, Logout Buttons */
      $("#signupbutton").html(check.signupbutton);
      $("#loginbutton").html(check.loginbutton);
      $("#logoutbutton").html(check.logoutbutton);

      /* Menu */
      $("#about-lg").html(check.about);
      $("#api-lg").html(check.api);
      $("#usecase-lg").html(check.usecase);
      $("#contact-lg").html(check.contact);
      $("#opensource-lg").html(check.opensource);
      /* Body */
        $(".star").html("*");

        // Signup Page
          $("#loginttl").html(check.loginttl);
          $("#emailttl").html(check.emailttl);
          $("#signpasswordttl").html(check.signpasswordttl);
          $("#confimpwdttl").html(check.confimpwdttl);
          $("#namettl").html(check.namettl);
          $("#signup").html(check.signup);
          $("#tlsignup").html(check.signup);

          // Signup Success Page
          $("#thanksttl").html(check.thanksttl);
          $("#contatsttl").html(check.contatsttl);
          $("#gobackttl").html(check.gobackttl);

        // Login Page
        $("#loginttl").html(check.loginttl);
      $("#emailttl").html(check.emailttl);
      $("#passwordttl").html(check.passwordttl);
      $("#loginbtn").html(check.loginbtn);
      $("#frgttl").html(check.frgttl);

        // Home Page
        $("#freestock").html(check.freestock);
        $("#opendb").html(check.opendb);
        $("#h3text001").html(check.h3text001);
        $("#ptext001").html(check.ptext001);
        $("#h3text002").html(check.h3text002);
        $("#ptext002").html(check.ptext002);
        $("#h3text003").html(check.h3text003);
        $("#ptext003").html(check.ptext003);
        $("#homepage-slider-text-1").html(check.homeSliderText1);
        $("#homepage-slider-text-2").html(check.homeSliderText2);
        $("#homepage-slider-text-3").html(check.homeSliderText3);
        // $("#homepage-slider-button-text").html(check.homeSliderBtnText);
        $("#termsOfUse").html(check.termsOfUse);
        $("#privacyPolicy").html(check.privacyPolicy);
        $("#contactInformation").html(check.contactInformation);

        // Forgot Password Page
          $("#frgpwdttl").html(check.frgpwdttl);
          $("#emailreg").html(check.emailreg);
          $("#sendvericode").html(check.sendvericode);

          // Verify Password Page
          $("#verifyst").html(check.verifyst);
          $("#verifybtn").html(check.verifybtn);

          // Reset Password Page
          $("#resetpwdttl").html(check.resetpwdttl);
          $("#newpwdttl").html(check.newpwdttl);
          $("#confnewpwdttl").html(check.confnewpwdttl);
          $("#savebtn").html(check.savebtn);

          // Terms Page
          $("#termttl").html(check.termttl);
          $("#termtxt1").html(check.termtxt1);
          $("#termtxt2").html(check.termtxt2);
          $("#termtxt3").html(check.termtxt3);

          // Privacy Page
          $("#prvcttl").html(check.prvcttl);
          $("#prvctxt1").html(check.prvctxt1);
          $("#prvctxt2").html(check.prvctxt2);
          $("#prvctxt3").html(check.prvctxt3);

          // Use Case Page
          $("#usecasettl").html(check.usecasettl);
          $("#usecasettl1").html(check.usecasettl1);
          $("#usecasettl2").html(check.usecasettl2);
          $("#usecasettl3").html(check.usecasettl3);
          $("#usecasettl4").html(check.usecasettl4);
          $("#usecasettl5").html(check.usecasettl5);
          $("#usecasettl6").html(check.usecasettl6);
          $("#usecasettl7").html(check.usecasettl7);
          $("#usecasettl8").html(check.usecasettl8);
          $("#usecasettl9").html(check.usecasettl9);
          $("#usecasettl10").html(check.usecasettl10);
          $("#usecasettl11").html(check.usecasettl11);
          $("#av").html(check.av);
          $("#movie_new").html(check.movie_new);
          //open source page
      $("#opensource").html(check.opensource);
      $("#os_ttl").html(check.os_ttl);
      $("#os_subttl").html(check.os_subttl);
      $("#os_subttl1").html(check.os_subttl1);
      $("#os_h4ttl1").html(check.os_h4ttl1);
      $("#os_h4ttl2").html(check.os_h4ttl2);
      $("#os_h4ttl3").html(check.os_h4ttl3);
      $("#os_h4ttl4").html(check.os_h4ttl4);
      $("#os_h4ttl5").html(check.os_h4ttl5);
      $("#os_h4ttl6").html(check.os_h4ttl6);
      $("#os_h4ttl7").html(check.os_h4ttl7);
//Solji Page
      $("#Solji_h2_title").html(check.Solji_h2_title);
      $("#Solji_strong_title").html(check.Solji_strong_title);
      $("#iframe_video").html(check.iframe_video);
      $("#solji_a_1").html(check.solji_a_1);
      $("#solji_h3_1").html(check.solji_h3_1);
      $("#solji_p_1").html(check.solji_p_1);
      $("#solji_p_2").html(check.solji_p_2);
      $("#solji_span_1").html(check.solji_span_1);
      $("#solji_a_2").html(check.solji_a_2);
      /* Footer */
      $("#terms").html(check.terms);
      $("#privacy").html(check.privacy);
      $("#textreserch").html(check.textreserch);

  });
}
